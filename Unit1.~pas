unit Unit1;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, ComCtrls, ClipBrd, ExtCtrls;

type
  TForm1 = class(TForm)
    Memo1: TMemo;
    Label1: TLabel;
    Button1: TButton;
    UpDown1: TUpDown;
    Button2: TButton;
    Timer1: TTimer;
    StaticText1: TStaticText;
    procedure Button1Click(Sender: TObject);
    procedure UpDown1Click(Sender: TObject; Button: TUDBtnType);
    procedure FormCreate(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
  private
    { Private declarations }
     function tipo(letra:string):integer;
     function ordernar(txtDes:string):string;
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

uses Math, StdConvs;

{$R *.dfm}

function TForm1.tipo(letra: string): integer;
const
 vog = 'aeiouyàâêôûãõáéíóúçüÀÂÊÔÛÃÕÁÉÍÓÚÇÜ';
 con = 'qwrtpsdfghjklçzxcvbnm';
 num = '1234567890';
begin
 If pos(LowerCase(letra),vog)>0 then
  Result:=1
 else if pos(LowerCase(letra),con)>0 then
  Result:=2
 else if pos(LowerCase(letra),num)>0 then
  Result:=3
 else if pos(LowerCase(letra), #13)>0 then
  result:=4
 else if pos(LowerCase(letra), ' ')>0 then
  result:=5
 else
  result:=0;
end;

procedure TForm1.Button1Click(Sender: TObject);
var
 i,qt,vgs,cnt,otr,num,esp,qbr,wd:integer;
 all:string;
begin
 qt:=Length(memo1.Text);
 otr:=0; //0
 vgs:=0; //1
 cnt:=0; //2
 num:=0; //3
 qbr:=0; //4
 esp:=0; //5
 wd:=0;
 all:='';
 if Length(memo1.Text)>0 then
  begin
   if tipo(Memo1.Text[1]) in [1,2] then
   wd:=1;
  end;

 for i:=1 to Length(memo1.Text) do
 begin
  if pos(Memo1.Text[i],all)=0 then
   begin
   all:=all+Memo1.Text[i];
   end;
  case tipo(Memo1.Text[i]) of
  0:otr:=otr+1;
  1:vgs:=vgs+1;
  2:cnt:=cnt+1;
  3:num:=num+1;
  4:begin
     qbr:=qbr+1;
     if tipo(Memo1.Text[i+1]) in [1,2] then
     wd:=wd+1;
    end;
  5:begin
     esp:=esp+1;
     if tipo(Memo1.Text[i+1]) in [1,2] then
     wd:=wd+1;
    end;
  end;

 end;
 all:=ordernar(all);
 if pos(' ',all)>0 then
   begin
   all:=StringReplace(all,' ','',[rfReplaceAll]);
   all:=all + ' *ESPAÇO*'
   end;
 if pos(#13,all)>0 then
   begin
   all:=StringReplace(all,#13,'',[rfReplaceAll]);
   all:=all + ' *QUEBRA_DE_LINHA(#13)*'
   end;


Label1.Caption:='Total de caracteres: ' + IntToStr(qt) +#13+
'Palavras:     '+ IntToStr(wd) + #13 +
#13 +
'Vogais:       '+ IntToStr(vgs) + #13 +
'Consoantes:   '+ IntToStr(cnt) + #13 +
'Números:      '+ IntToStr(num) + #13 +
'espaços:      '+ IntToStr(esp) + #13 +
'qb. de linha: '+ IntToStr(qbr) + #13 +
'Outros:       '+ IntToStr(otr) + #13 +
#13 +
'Caracteres  usados: ' +#13 + all;
end;

procedure TForm1.UpDown1Click(Sender: TObject; Button: TUDBtnType);
begin
 Memo1.Font.Size:=UpDown1.Position;
end;

procedure TForm1.FormCreate(Sender: TObject);
begin
 UpDown1.Position:=Memo1.Font.Size;
 Button1.Click;
end;

procedure TForm1.Button2Click(Sender: TObject);
begin
Clipboard.AsText:=Label1.Caption;
StaticText1.Left:=Round((Form1.Width-StaticText1.Width)/2);
StaticText1.Top:=round((Form1.Height-StaticText1.Height)/2);
StaticText1.Show;
Timer1.Enabled:=False;
Timer1.Interval:=3000;
Timer1.Enabled:=True;
end;

function TForm1.ordernar(txtDes: string): string;
const
 alfnum = 'abcdefghijklmnopqrstuvwxyzñÑàâêôûãõáéíóúçüÀÂÊÔÛÃÕÁÉÍÓÚÇÜ1234567890';
var
 txtOrd:string;
 i:integer;
begin
 txtOrd:='';
For i:=1 to Length(alfnum) do
 begin
  if pos(LowerCase(alfnum[i]),LowerCase(txtDes))>0 then
  begin
  txtOrd:=txtOrd+alfnum[i];
  txtDes:=StringReplace(txtDes,alfnum[i],'',[rfReplaceAll,rfIgnoreCase]);
  end;
 end;
txtOrd:=txtOrd+txtDes;
Result:=txtOrd;
end;

procedure TForm1.Timer1Timer(Sender: TObject);
begin
StaticText1.Hide;
Timer1.Enabled:=False;
end;

end.
